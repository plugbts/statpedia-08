name: Deploy Cloudflare Worker

on:
  push:
    branches:
      - main
      - chore/auth-worker-fixes
  workflow_dispatch: {}

jobs:
  deploy-worker:
    name: Deploy player-props worker
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install wrangler
        run: npm -w cloudflare-worker ci

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Publish to Cloudflare (staging)
        if: github.ref != 'refs/heads/main'
        working-directory: cloudflare-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx wrangler deploy --env staging

      - name: Publish to Cloudflare (production)
        if: github.ref == 'refs/heads/main'
        working-directory: cloudflare-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx wrangler deploy --env production --var COMMIT_SHA=${{ github.sha }} --var BUILD_BRANCH=${{ github.ref_name }}

      - name: Install wrangler (aux workers)
        if: github.ref == 'refs/heads/main'
        run: npm -w cloudflare ci

      - name: Deploy auth worker (production)
        if: github.ref == 'refs/heads/main'
        working-directory: cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx wrangler deploy --name statpedia-auth auth-worker.js

      - name: Deploy storage worker (production)
        if: github.ref == 'refs/heads/main'
        working-directory: cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx wrangler deploy --name statpedia-storage storage-worker.js

      - name: Deploy proxy worker (production)
        if: github.ref == 'refs/heads/main'
        working-directory: cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx wrangler deploy --name statpedia-proxy proxy-worker.js

      - name: Warm caches (best-effort)
        if: always()
        run: |
          set -e
          for L in nfl nba mlb nhl; do
            echo "Warming $L ..."
            curl -sS "https://statpedia-player-props.statpedia.workers.dev/api/player-props?sport=$L&force_refresh=true" >/dev/null || true
          done

      - name: Smoke check /status
        working-directory: cloudflare-worker
        if: always()
        run: |
          set -e
          URL="https://statpedia-player-props.statpedia.workers.dev/status"
          echo "Hitting $URL ..."
          curl -sS "$URL" | jq -e '.status == "healthy"' >/dev/null || (echo "Unexpected response" && exit 1)
