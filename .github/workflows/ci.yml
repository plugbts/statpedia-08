name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      HASURA_GRAPHQL_ENDPOINT: ${{ secrets.HASURA_GRAPHQL_ENDPOINT }}
      HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Run tests
        run: npm test

      - name: Verify Hasura availability (optional)
        if: ${{ env.HASURA_GRAPHQL_ENDPOINT != '' && env.HASURA_GRAPHQL_ADMIN_SECRET != '' }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          RESP=$(curl -sS \
            -H "content-type: application/json" \
            -H "x-hasura-admin-secret: $HASURA_GRAPHQL_ADMIN_SECRET" \
            -d '{"query":"query { __typename }"}' \
            "$HASURA_GRAPHQL_ENDPOINT")
          echo "$RESP"
          echo "$RESP" | jq -e '.data.__typename' >/dev/null

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Apply migrations (Neon)
        run: |
          set -e
          psql "$DATABASE_URL" -f db/migrations/latest.sql
          for f in db/migrations/000*.sql; do
            echo "Applying $f";
            psql "$DATABASE_URL" -f "$f";
          done

      - name: Run debug dashboard (Neon)
        run: node scripts/ci-debug-pipeline.mjs
