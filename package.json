{
  "name": "vite_react_shadcn_ts",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "build:dev": "vite build --mode development",
    "lint": "eslint .",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "check": "npm run lint && npm run typecheck && npm run format:check",
    "sql:check": "node scripts/ci-debug-pipeline.mjs",
    "prepare": "husky install",
    "preview": "vite preview",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:push": "drizzle-kit push --force",
    "db:studio": "drizzle-kit studio",
    "db:seed": "tsx src/db/seed.ts",
    "db:apply-sql": "tsx scripts/apply-sql-migrations.ts",
    "db:introspect": "tsx scripts/db-introspect.ts",
  "db:ensure:leagues": "tsx scripts/ensure-leagues.ts",
  "db:apply-sql-file": "tsx scripts/apply-sql-file.ts",
  "db:seed:teams:all": "tsx scripts/apply-sql-file.ts seed-all-teams-simple.sql",
  "db:seed:teams:comprehensive": "tsx scripts/apply-sql-file.ts seed-comprehensive-teams.sql",
  "db:seed:mappings": "tsx scripts/apply-sql-file.ts scripts/create-team-abbrev-mapping-corrected.sql",
  "db:seed:mappings:auto": "tsx scripts/apply-sql-file.ts scripts/seed-team-abbrev-map-from-teams.sql",
  "db:seed:teams": "tsx scripts/seed-mlb-team-mapping.ts",
    "db:enrich": "tsx scripts/run-enrichment-sql.ts",
    "db:migrate:analytics": "tsx -e \"import 'dotenv/config';import postgres from 'postgres';import fs from 'fs/promises';(async()=>{const conn=process.env.NEON_DATABASE_URL||process.env.DATABASE_URL;if(!conn){console.error('No DB URL');process.exit(1);}const sql=postgres(conn,{prepare:false});try{const s=await fs.readFile('db/migrations/0007_create_player_analytics.sql','utf8');await sql.unsafe(s);console.log('Applied 0007_create_player_analytics.sql');}finally{await sql.end({timeout:2});}})()\"",
    "analytics:enrich": "tsx scripts/enrich-player-analytics.ts",
    "hasura:setup": "node setup-hasura.js",
    "hasura:console": "echo 'Open Hasura Console: https://graphql-engine-latest-statpedia.onrender.com/console'",
    "ingest:props:drizzle": "tsx scripts/ingest-props-drizzle.ts",
    "schedule:props": "node scripts/schedule-props-ingestion.js",
    "ingest:enhanced": "tsx scripts/run-enhanced-ingestion.ts",
    "ingest:upcoming": "tsx scripts/run-upcoming-props-ingestion.ts",
    "ingest:full": "tsx scripts/run-full-ingestion.ts",
    "test:fixtures": "tsx scripts/test-fixtures.ts",
    "test:harness": "tsx scripts/test-one-game-harness.ts",
    "git-sync": "node scripts/git-sync.js",
    "git-sync:watch": "node scripts/git-sync.js watch",
    "git-sync:setup": "node scripts/git-sync.js setup-hooks",
    "git-sync:sync": "node scripts/git-sync.js sync",
    "git-sync:pull": "node scripts/git-sync.js pull",
    "git-sync:check": "node scripts/git-sync.js check",
    "loveable-sync": "node scripts/loveable-sync.js",
    "loveable-sync:watch": "node scripts/loveable-sync.js watch",
    "loveable-sync:check": "node scripts/loveable-sync.js check",
    "ingest-data": "node scripts/ingest-historical-data.js",
    "ingest-data:nfl": "node scripts/ingest-historical-data.js NFL 2025 100",
    "ingest-data:clear": "node scripts/clear-historical-data.js",
    "ingest-data:realistic": "node scripts/simple-ingest.js",
    "ingest-data:real": "node scripts/real-data-ingest.js",
    "ingest-data:comprehensive": "node scripts/comprehensive-ingest.js",
    "debug-analytics": "node scripts/debug-analytics.js",
    "debug-analytics:comprehensive": "node scripts/comprehensive-debug.js",
    "precompute-analytics": "node scripts/nightly-precompute-analytics.js",
    "precompute-analytics:2024": "node scripts/nightly-precompute-analytics.js 2024",
    "precompute-analytics:2025": "node scripts/nightly-precompute-analytics.js 2025",
    "precompute-analytics:enhanced": "node scripts/enhanced-precompute-analytics.js",
    "precompute-analytics:enhanced:2024": "node scripts/enhanced-precompute-analytics.js 2024",
    "precompute-analytics:enhanced:2025": "node scripts/enhanced-precompute-analytics.js 2025",
    "nightly-job": "node scripts/combined-nightly-job.js",
    "nightly-job:simple": "node scripts/simple-nightly-job.js",
    "nightly-job:ingestion-only": "node scripts/nightly-ingestion.js",
    "nightly-job:analytics-only": "node scripts/nightly-precompute-analytics.js",
    "ingest-proplines": "node scripts/proplines-ingestion.js",
    "nightly-job:proplines-only": "node scripts/proplines-ingestion.js",
    "backfill-historical": "node scripts/historical-backfill.js",
    "backfill-historical:2022": "node scripts/historical-backfill.js 2022",
    "backfill-historical:2023": "node scripts/historical-backfill.js 2023",
    "backfill-historical:2024": "node scripts/historical-backfill.js 2024",
    "start-scheduler": "node scheduled-nightly-job.js",
    "schedule": "node scheduled-nightly-job.js",
    "ingest-props-v2": "node scripts/prop-ingestion-v2.js",
    "ingest-props-v2:2024": "node scripts/prop-ingestion-v2.js 2024",
    "ingest-props-v2:2025": "node scripts/prop-ingestion-v2.js 2025",
    "ingest-props-v2-enhanced": "node scripts/prop-ingestion-v2-enhanced.js",
    "ingest-props-v2-enhanced:2024": "node scripts/prop-ingestion-v2-enhanced.js 2024",
    "ingest-props-v2-enhanced:2025": "node scripts/prop-ingestion-v2-enhanced.js 2025",
    "real-data:pipeline": "tsx scripts/run-real-data-pipeline.ts",
    "real-data:nfl": "tsx scripts/run-real-data-pipeline.ts NFL",
    "real-data:nba": "tsx scripts/run-real-data-pipeline.ts NBA",
    "real-data:enrich": "tsx scripts/enrich-props-real-analytics.ts",
    "real-data:skeleton": "tsx scripts/real-data-ingestion-skeleton.ts",
    "real-data:nfl-skeleton": "tsx scripts/real-data-ingestion-skeleton.ts nfl",
    "real-data:nba-skeleton": "tsx scripts/real-data-ingestion-skeleton.ts nba",
    "real-data:wnba-skeleton": "tsx scripts/real-data-ingestion-skeleton.ts wnba",
    "real-data:mlb-skeleton": "tsx scripts/real-data-ingestion-skeleton.ts mlb",
    "real-data:nhl-skeleton": "tsx scripts/real-data-ingestion-skeleton.ts nhl",
    "real-data:all-skeleton": "tsx scripts/real-data-ingestion-skeleton.ts all",
    "nba-ingestion": "tsx scripts/nba-ingestion-boxscore.ts",
    "wnba-ingestion": "tsx scripts/wnba-ingestion-boxscore.ts",
    "mlb-ingestion": "tsx scripts/mlb-ingestion-boxscore.ts",
    "nhl-ingestion": "tsx scripts/nhl-ingestion-boxscore.ts",
    "ingest:official": "tsx scripts/ingest-official-game-logs.ts",
    "ingest:official:nba": "tsx scripts/ingest-official-game-logs.ts NBA 60",
    "ingest:official:nfl": "tsx scripts/ingest-official-game-logs.ts NFL 60",
    "ingest:official:mlb": "tsx scripts/ingest-official-game-logs.ts MLB 60",
  "ingest:official:wnba": "tsx scripts/ingest-official-game-logs.ts WNBA 60",
  "ingest:official:nhl": "tsx scripts/ingest-official-game-logs.ts NHL 60",
  "ingest:official:all": "concurrently -n NBA,NFL,MLB,WNBA,NHL \"npm:ingest:official:nba\" \"npm:ingest:official:nfl\" \"npm:ingest:official:mlb\" \"npm:ingest:official:wnba\" \"npm:ingest:official:nhl\"",
    "player-logs:test": "tsx scripts/test-player-logs-ingestion.ts",
    "player-logs:debug": "tsx scripts/nba-wnba-player-logs-ingestion.ts debug",
    "player-logs:batch": "tsx scripts/nba-wnba-player-logs-ingestion.ts batch",
    "mlb-nhl:test": "tsx scripts/test-mlb-nhl-ingestion.ts",
    "mlb-nhl:debug": "tsx scripts/mlb-nhl-player-logs-ingestion.ts debug",
    "mlb-nhl:batch": "tsx scripts/mlb-nhl-player-logs-ingestion.ts batch",
    "find-mlb-games": "tsx scripts/find-mlb-games.ts",
    "find-nhl-games": "tsx scripts/find-nhl-games.ts",
    "backfill:60:all": "tsx scripts/backfill-last-days.ts ALL 60",
    "backfill:60:nba": "tsx scripts/backfill-last-days.ts NBA 60",
    "backfill:60:wnba": "tsx scripts/backfill-last-days.ts WNBA 60",
    "backfill:60:mlb": "tsx scripts/backfill-last-days.ts MLB 60",
    "backfill:60:nhl": "tsx scripts/backfill-last-days.ts NHL 60",
    "backfill:365": "tsx scripts/backfill-365-days.ts",
    "backfill:test": "tsx scripts/backfill-test.ts",
    "backfill:mlb-nhl": "tsx scripts/backfill-mlb-nhl.ts",
    "db:migrate:raw": "tsx -e \"import 'dotenv/config';import postgres from 'postgres';import fs from 'fs/promises';(async()=>{const c=process.env.NEON_DATABASE_URL||process.env.DATABASE_URL;if(!c){console.error('No DB URL');process.exit(1);}const sql=postgres(c,{prepare:false});try{const s=await fs.readFile('db/migrations/0008_create_player_game_logs_raw.sql','utf8');await sql.unsafe(s);console.log('Applied 0008_create_player_game_logs_raw.sql');}finally{await sql.end({timeout:2});}})()\"",
  "db:migrate:seasons": "tsx -e \"import 'dotenv/config';import postgres from 'postgres';import fs from 'fs/promises';(async()=>{const c=process.env.NEON_DATABASE_URL||process.env.DATABASE_URL;if(!c){console.error('No DB URL');process.exit(1);}const sql=postgres(c,{prepare:false});try{const s=await fs.readFile('db/migrations/0010_seed_league_season_windows.sql','utf8');await sql.unsafe(s);console.log('Applied 0010_seed_league_season_windows.sql');}finally{await sql.end({timeout:2});}})()\"",
    "api:server": "tsx src/server/api-server.ts",
    "enrichment:webhook": "tsx src/server/enrichment-webhook.ts",
    "dev:full": "concurrently \"npm run api:server\" \"npm run dev\""
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@neondatabase/serverless": "^1.0.2",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-hover-card": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@tanstack/react-query": "^5.83.0",
    "@types/cheerio": "^0.22.35",
    "@types/dompurify": "^3.0.5",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node-fetch": "^2.6.13",
    "@types/pg": "^8.15.5",
    "@types/react-window": "^1.8.8",
    "@types/uuid": "^10.0.0",
    "argon2": "^0.44.0",
    "cheerio": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "concurrently": "^9.2.1",
    "cors": "^2.8.5",
    "date-fns": "^3.6.0",
    "dompurify": "^3.2.7",
    "drizzle-orm": "^0.44.6",
    "drizzle-zod": "^0.8.3",
    "embla-carousel-react": "^8.6.0",
    "express": "^5.0.0",
    "framer-motion": "^12.23.22",
    "input-otp": "^1.4.2",
    "isomorphic-dompurify": "^2.28.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.462.0",
    "next-themes": "^0.3.0",
    "node-cron": "^4.2.1",
    "node-fetch": "^3.3.2",
    "pg": "^8.16.3",
    "postgres": "^3.4.7",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-error-boundary": "^4.0.13",
    "react-hook-form": "^7.61.1",
    "react-resizable-panels": "^2.1.9",
    "react-router-dom": "^6.30.1",
    "react-window": "^2.2.0",
    "react-window-infinite-loader": "^2.0.0",
    "recharts": "^2.15.4",
    "sonner": "^1.7.4",
    "swr": "^2.3.6",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^13.0.0",
    "vaul": "^0.9.9",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "^3.911.0",
    "@cloudflare/workers-types": "^4.20251004.0",
    "@eslint/js": "^9.32.0",
    "@tailwindcss/typography": "^0.5.16",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/node": "^22.16.5",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@vitejs/plugin-react-swc": "^3.11.0",
    "autoprefixer": "^10.4.21",
    "chokidar": "^3.6.0",
    "dotenv": "^17.2.3",
    "drizzle-kit": "^0.31.5",
    "eslint": "^9.32.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^15.15.0",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "lovable-tagger": "^1.1.10",
    "postcss": "^8.5.6",
    "prettier": "^3.3.3",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.20.6",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.38.0",
    "vite": "^5.4.19"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.18.0"
  },
  "lovable": {
    "projectId": "statpedia-08",
    "autoSync": true,
    "syncInterval": 30000
  }
}
