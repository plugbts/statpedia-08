{
  "skills": [
    {
      "name": "sports-data-pipeline",
      "description": "Domain-specific patterns for ESPN API ingestion, enrichment analytics, backfill coordination, and production monitoring across NFL/NBA/MLB/NHL/WNBA",
      "skillPath": "sports-data-pipeline/sports-data-pipeline.md",
      "triggers": {
        "fileTriggers": {
          "pathPatterns": [
            "scripts/ingest*.ts",
            "scripts/backfill*.ts",
            "scripts/enrich*.ts",
            "scripts/*-ingestion*.ts",
            "scripts/*-backfill*.ts",
            "scripts/*-enrichment*.ts",
            "scripts/production-guardrails.ts"
          ]
        },
        "keywords": [
          "ingest",
          "ingestion",
          "backfill",
          "enrichment",
          "enrich",
          "pipeline",
          "ESPN",
          "league",
          "NFL",
          "NBA",
          "MLB",
          "NHL",
          "WNBA",
          "game logs",
          "player analytics",
          "prop types",
          "season average",
          "hit rate",
          "streak",
          "rolling average",
          "guardrails",
          "monitoring",
          "metrics"
        ]
      }
    },
    {
      "name": "backend-dev-guidelines",
      "description": "Express + TypeScript + Neon Postgres + Drizzle ORM patterns for building robust, type-safe API endpoints with direct SQL queries",
      "skillPath": "backend-dev-guidelines/backend-dev-guidelines.md",
      "triggers": {
        "fileTriggers": {
          "pathPatterns": [
            "src/server/**/*.ts",
            "src/server/**/*.js",
            "server/**/*.ts",
            "server/**/*.js",
            "src/app/api/**/*.ts",
            "src/lib/auth/**/*.ts",
            "src/services/**/*.ts"
          ]
        },
        "keywords": [
          "Express",
          "API",
          "endpoint",
          "route",
          "middleware",
          "Neon",
          "Postgres",
          "Drizzle",
          "SQL",
          "database",
          "query",
          "authentication",
          "JWT",
          "auth",
          "error handling",
          "validation",
          "CORS"
        ]
      }
    },
    {
      "name": "frontend-dev-guidelines",
      "description": "React + Vite + TypeScript + shadcn/ui + TanStack Query patterns for building accessible, type-safe UI components",
      "skillPath": "frontend-dev-guidelines/frontend-dev-guidelines.md",
      "triggers": {
        "fileTriggers": {
          "pathPatterns": [
            "src/components/**/*.tsx",
            "src/components/**/*.jsx",
            "src/pages/**/*.tsx",
            "src/pages/**/*.jsx",
            "src/hooks/**/*.ts",
            "src/contexts/**/*.tsx"
          ]
        },
        "keywords": [
          "React",
          "component",
          "shadcn",
          "shadcn/ui",
          "TanStack Query",
          "useQuery",
          "UI",
          "frontend",
          "props",
          "state",
          "hooks",
          "Tailwind",
          "responsive",
          "accessibility",
          "ARIA",
          "TypeScript interface"
        ]
      }
    }
  ]
}
